@model FelipeB_App3BI.Models.AgenteModel
@using FelipeB_App3BI.Util
@{
    ViewBag.Title = "AgenteForm";
    ViewBag.ActiveIndex = 1;
}

@{
    if (Model != null)
    {
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between">
                    <h2>Edição de @Model.Nome</h2>
                    <div class="d-flex align-items-center">
                        @using (Html.BeginForm("Delete", "Agente", FormMethod.Post))
                        {
                            <button class="btn btn-danger" type="submit" name="id" value="@Model.CPF">Deletar</button>
                        }
                    </div>
                </div>
                <h6 class="text-muted font-italic">@Html.DisplayNameFor(model => model.CPF):&nbsp;@Masker.MaskCpf(Model.CPF)</h6>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Save", "Agente", FormMethod.Post))
                {
                    <input type="text" name="cpf" value="@Model.CPF" class="d-none"/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome)
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Nome)</small>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefone)
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Telefone)</small>
                    </div>
                    <div class="form-row w-100">
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.Endereco.Estado)
                            @Html.DropDownListFor(model => model.Endereco.Estado, new SelectList(((List<string>)ViewBag.Estados).Select(e => new { Value = e, Text = e }), "Value", "Text"), new { @class = "form-control" })
                            <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Endereco.Estado)</small>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Endereco.Cidade)
                            @Html.EditorFor(model => model.Endereco.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                            <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Endereco.Cidade)</small>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco.Logradouro)
                        @Html.EditorFor(model => model.Endereco.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Endereco.Logradouro)</small>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco.Numero)
                        @Html.EditorFor(model => model.Endereco.Numero, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Endereco.Numero)</small>
                    </div>
                    <div class="form-check">
                        @Html.CheckBoxFor(model => model.IsCliente, new { id = "check_cliente", htmlAttributes = new { @class = "form-check-input", @id = "check_cliente" } })
                        <label class="form-check-label" for="check_cliente">Cliente 🧔</label>
                    </div>
                    <div class="form-check">
                        @Html.CheckBoxFor(model => model.IsFuncionario, new { id = "check_funcionario", htmlAttributes = new { @class = "form-check-input" } })
                        <label class="form-check-label" for="check_funcionario">Funcionário 👷‍♂️</label>
                    </div>

                    <div class="d-flex mt-3">
                        <button type="submit" class="btn btn-primary ml-auto">Enviar</button>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between">
                    <h2>Criação de Agente</h2>
                </div>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Save", "Agente", FormMethod.Post))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.CPF)
                        @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.CPF)</small>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome)
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Nome)</small>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefone)
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Telefone)</small>
                    </div>
                    <div class="form-row w-100">
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.Endereco.Estado)
                            @Html.DropDownListFor(model => model.Endereco.Estado, new SelectList(((List<string>)ViewBag.Estados).Select(e => new { Value = e, Text = e }), "Value", "Text"), new { @class = "form-control" })
                            <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Endereco.Estado)</small>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Endereco.Cidade)
                            @Html.EditorFor(model => model.Endereco.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                            <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Endereco.Cidade)</small>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco.Logradouro)
                        @Html.EditorFor(model => model.Endereco.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Endereco.Logradouro)</small>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Endereco.Numero)
                        @Html.EditorFor(model => model.Endereco.Numero, new { htmlAttributes = new { @class = "form-control" } })
                        <small class="form-text text-danger">@Html.ValidationMessageFor(model => model.Endereco.Numero)</small>
                    </div>
                    <div class="form-check">
                        @Html.CheckBoxFor(model => model.IsCliente, new { id = "check_cliente", htmlAttributes = new { @class = "form-check-input", @id = "check_cliente" } })
                        <label class="form-check-label" for="check_cliente">Cliente 🧔</label>
                    </div>
                    <div class="form-check">
                        @Html.CheckBoxFor(model => model.IsFuncionario, new { id = "check_funcionario", htmlAttributes = new { @class = "form-check-input" } })
                        <label class="form-check-label" for="check_funcionario">Funcionário 👷‍♂️</label>
                    </div>

                    <div class="d-flex mt-3">
                        <button type="submit" class="btn btn-primary ml-auto">Enviar</button>
                    </div>
                }
            </div>
        </div>
    }
}
